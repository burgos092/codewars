import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Kata {

    // Método principal que calcula la diferencia entre dos arreglos de enteros
    public static int[] arrayDiff(int[] a, int[] b) {

        // 1. Conversión de arreglos a listas
        // Crea una lista vacía para almacenar los elementos de 'a'
        List<Integer> listA = new ArrayList<>();  

        // Itera sobre cada elemento 'num' en el arreglo 'a'
        for (int num : a) {
            listA.add(num); // Agrega el elemento 'num' a la lista 'listA'
        }

        // Convierte el arreglo 'b' en una lista de Integer utilizando streams y boxing
        List<Integer> listB = Arrays.asList(Arrays.stream(b).boxed().toArray(Integer[]::new));

        // 2. Eliminación de elementos comunes
        listA.removeAll(listB); // Elimina de 'listA' todos los elementos que están presentes en 'listB'

        // 3. Conversión de la lista resultante a un arreglo de enteros
        // Utiliza streams para convertir la lista 'listA' en un flujo de enteros
        return listA.stream()
                .mapToInt(i -> i) // Convierte cada Integer en un int primitivo
                .toArray();        // Colecciona los ints en un nuevo arreglo y lo retorna
    }

    // Método main para probar la función arrayDiff() con ejemplos
    public static void main(String[] args) {
        int[] arr1 = {1, 2};
        int[] arr2 = {1};
        int[] result1 = arrayDiff(arr1, arr2);
        System.out.println(Arrays.toString(result1)); // [2]

        int[] arr3 = {1, 2, 2, 2, 3};
        int[] arr4 = {2};
        int[] result2 = arrayDiff(arr3, arr4);
        System.out.println(Arrays.toString(result2)); // [1, 3]
    }
}